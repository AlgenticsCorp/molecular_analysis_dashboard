[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "molecular_analysis_dashboard"
version = "0.1.0"
description = "A professionally structured Python project following clean architecture principles"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@company.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@company.com"}
]
keywords = ["clean-architecture", "hexagonal", "ports-adapters", "template"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.0",
    "gunicorn>=21.2.0",
    "celery>=5.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "pydocstyle>=6.3.0",
    "pylint>=3.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "radon>=6.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
]
tools = [
    "pyan3>=1.2.0",
    "graphviz>=0.20.0",
]
all = ["molecular_analysis_dashboard[dev,docs,tools]"]

[project.urls]
Homepage = "https://github.com/your-org/your-repo"
Documentation = "https://your-org.github.io/your-repo"
Repository = "https://github.com/your-org/your-repo"
Issues = "https://github.com/your-org/your-repo/issues"
Changelog = "https://github.com/your-org/your-repo/blob/main/CHANGELOG.md"

[project.scripts]
your-cli = "molecular_analysis_dashboard.presentation.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
molecular_analysis_dashboard = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/molecular_analysis_dashboard",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    # Note: Coverage threshold disabled for template usage
    # Users should uncomment and set appropriate threshold when adding tests
    # "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring (handled by flake8-docstrings)
    "R0903",  # too-few-public-methods
]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.design]
max-args = 6
max-locals = 15
max-branches = 12
max-returns = 6
max-statements = 60

# bandit configuration
[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]  # Test for use of assert

# pydocstyle configuration
[tool.pydocstyle]
convention = "google"
add_ignore = ["D104"]  # Missing docstring in public package
match_dir = "^(?!tests).*"
