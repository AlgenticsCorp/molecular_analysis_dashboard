# Database Environment Configuration
# Copy this to `.env` in the database directory and adjust values

# =============================================================================
# Database Connection Settings
# =============================================================================

# PostgreSQL Configuration
POSTGRES_USER=mad
POSTGRES_PASSWORD=mad_password
POSTGRES_DB=mad
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Main database URL (for metadata)
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Results database template (per-organization)
# {org_id} will be replaced with actual organization ID
RESULTS_DB_TEMPLATE=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}_results_{org_id}

# =============================================================================
# Redis Configuration (for job queues and caching)
# =============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0

# =============================================================================
# Database Pool Settings
# =============================================================================

# Connection pool configuration
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_POOL_TIMEOUT=30

# Enable SQL query logging (development only)
DB_ECHO=false

# =============================================================================
# Migration Settings
# =============================================================================

# Default migration branch (metadata or results)
ALEMBIC_BRANCH=metadata

# =============================================================================
# Seeding Configuration
# =============================================================================

# Default organization settings
DEFAULT_ORG_NAME=Algentics Demo
DEFAULT_ADMIN_EMAIL=admin@algentics.com

# =============================================================================
# Development vs Production Settings
# =============================================================================

# Environment mode
ENV=development

# Logging level
LOG_LEVEL=info

# =============================================================================
# Docker Compose Overrides
# =============================================================================

# Docker Compose file to use
COMPOSE_FILE=docker-compose.db.yml

# Container resource limits (for production)
POSTGRES_MEMORY_LIMIT=2g
POSTGRES_CPU_LIMIT=1.0
REDIS_MEMORY_LIMIT=512m

# =============================================================================
# Backup Configuration
# =============================================================================

# Backup directory
BACKUP_DIR=./backups

# Backup retention (days)
BACKUP_RETENTION_DAYS=30

# =============================================================================
# Health Check Settings
# =============================================================================

# Health check intervals
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# Production Settings (override for production)
# =============================================================================

# For production, override these with secure values:
# POSTGRES_PASSWORD=<secure-random-password>
# DATABASE_URL=<production-database-url>
# REDIS_URL=<production-redis-url>

# Production database URLs (examples)
# DATABASE_URL=postgresql+asyncpg://user:pass@prod-db.example.com:5432/mad_prod
# REDIS_URL=redis://prod-redis.example.com:6379/0

# SSL configuration for production
# DATABASE_SSL_MODE=require
# REDIS_SSL_CERT_REQS=required
