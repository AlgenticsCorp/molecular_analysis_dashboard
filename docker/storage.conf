server {
    listen 8080;
    server_name localhost;

    # Root directory for storage files
    root /storage;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"storage"}';
        add_header Content-Type application/json;
    }

    # Upload endpoint for file storage
    location /uploads {
        # Allow file uploads
        client_max_body_size 100M;
        client_body_timeout 60s;

        # Directory listing for debugging (disable in production)
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # CORS headers for API access
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # Set proper content types for molecular files
        location ~* \.(pdb|sdf|mol2|pdbqt)$ {
            add_header Content-Type text/plain;
        }

        # Secure file serving
        location ~ /\. {
            deny all;
        }
    }

    # Results endpoint for computational outputs
    location /results {
        # Similar configuration to uploads
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Temporary files endpoint
    location /temp {
        # Restricted access - internal only
        internal;
        expires 1h;
    }

    # File upload endpoint via API
    location /api/upload {
        # Proxy to API service for file processing
        proxy_pass http://api:8000/api/v1/storage/upload;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Upload configuration
        client_max_body_size 100M;
        proxy_request_buffering off;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        root /usr/share/nginx/html;
    }

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
