# Production security headers and policies
# Based on CONFIGURATION.md security requirements

# Security headers for all responses
add_header X-Frame-Options DENY always;
add_header X-Content-Type-Options nosniff always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header X-Permitted-Cross-Domain-Policies none always;
add_header X-Download-Options noopen always;

# Content Security Policy
add_header Content-Security-Policy "
    default-src 'self';
    script-src 'self' 'unsafe-inline' 'unsafe-eval';
    style-src 'self' 'unsafe-inline';
    img-src 'self' data: https:;
    font-src 'self' data:;
    connect-src 'self' ws: wss:;
    media-src 'self';
    object-src 'none';
    frame-src 'none';
    base-uri 'self';
    form-action 'self';
" always;

# HSTS (when SSL is enabled)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# Remove server information
server_tokens off;
more_clear_headers 'Server';
more_clear_headers 'X-Powered-By';

# CORS configuration for API endpoints
map $request_method $cors_method {
    OPTIONS 1;
    default 0;
}

map $http_origin $cors_origin {
    default 0;
    "~^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$" 1;
    "~^https?://.*\.yourdomain\.com$" 1;
}

# Rate limiting error responses
error_page 429 /429.json;
location = /429.json {
    internal;
    return 429 '{"error":"Rate limit exceeded","message":"Too many requests"}';
    add_header Content-Type application/json;
}

# Security error responses
error_page 403 /403.json;
location = /403.json {
    internal;
    return 403 '{"error":"Forbidden","message":"Access denied"}';
    add_header Content-Type application/json;
}

error_page 401 /401.json;
location = /401.json {
    internal;
    return 401 '{"error":"Unauthorized","message":"Authentication required"}';
    add_header Content-Type application/json;
}

# Block common attack patterns
location ~* \.(php|asp|aspx|jsp|cgi)$ {
    return 404;
}

# Block access to sensitive files
location ~* \.(git|svn|hg|bzr|cvs)/ {
    deny all;
}

location ~* \.(env|config|ini|log|bak|backup|old|tmp)$ {
    deny all;
}

# Block common vulnerability scanners
if ($http_user_agent ~* (nikto|sqlmap|fimap|nessus|openvas|nmap)) {
    return 444;
}

# Block suspicious request patterns
if ($request_uri ~* (union|select|insert|cast|set|declare|drop|update|md5|benchmark)) {
    return 444;
}

# Limit request methods
if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
    return 405;
}
