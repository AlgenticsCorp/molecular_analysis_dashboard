# Main gateway Nginx configuration
# Optimized for production with security and performance

# user nginx;  # Not needed in container
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

# OpenResty includes realip module by default

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /usr/local/openresty/nginx/conf/mime.types;
    default_type application/octet-stream;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;

    # Buffer sizes
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Temporary directories (writable by nginx user)
    client_body_temp_path /tmp/nginx_client_temp;
    proxy_temp_path /tmp/nginx_proxy_temp;
    fastcgi_temp_path /tmp/nginx_fastcgi_temp;
    uwsgi_temp_path /tmp/nginx_uwsgi_temp;
    scgi_temp_path /tmp/nginx_scgi_temp;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=uploads:10m rate=10r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Real IP configuration (for proxy headers)
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;

    # Lua package path
    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/gateway/?.lua;;";

    # Initialize Lua modules
    init_by_lua_block {
        require "gateway.init"
    }

    # Logging format with request tracing
    log_format gateway_json escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"request_id":"$http_x_request_id",'
        '"method":"$request_method",'
        '"uri":"$uri",'
        '"args":"$args",'
        '"status":$status,'
        '"bytes_sent":$bytes_sent,'
        '"request_time":$request_time,'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time",'
        '"user_agent":"$http_user_agent",'
        '"remote_addr":"$remote_addr",'
        '"forwarded_for":"$http_x_forwarded_for",'
        '"user_id":"$http_x_user_id",'
        '"org_id":"$http_x_org_id"'
    '}';

    # Access logging
    access_log /var/log/nginx/access.log gateway_json;

    # Upstream definitions
    include /etc/nginx/conf.d/upstreams.conf;

    # Main server configuration
    include /etc/nginx/conf.d/gateway.conf;

    # Security configuration
    include /etc/nginx/conf.d/security.conf;

    # SSL configuration (when enabled)
    # include /etc/nginx/conf.d/ssl.conf;
}
